# HEY! This file is used in the dbt-artifacts integrations tests with GitHub Actions.
# You should __NEVER__ check credentials into version control. Thanks for reading :)

config:
  send_anonymous_usage_stats: False
  use_colors: True

dbt_artifacts:
  target: snowflake
  outputs:
    snowflake:
      type: snowflake
      account: "{{ env_var('DBT_ENV_SECRET_SNOWFLAKE_TEST_ACCOUNT') }}"
      user: "{{ env_var('DBT_ENV_SECRET_SNOWFLAKE_TEST_USER') }}"
      password: "{{ env_var('DBT_ENV_SECRET_SNOWFLAKE_TEST_PASSWORD') }}"
      role: "{{ env_var('DBT_ENV_SECRET_SNOWFLAKE_TEST_ROLE') }}"
      database: "{{ env_var('DBT_ENV_SECRET_SNOWFLAKE_TEST_DATABASE') }}"
      warehouse: "{{ env_var('DBT_ENV_SECRET_SNOWFLAKE_TEST_WAREHOUSE') }}"
      schema: &schema dbt_artifacts_test_commit_{{ env_var('DBT_VERSION', '') }}_{{ env_var('GITHUB_SHA_OVERRIDE', '') if env_var('GITHUB_SHA_OVERRIDE', '') else env_var('GITHUB_SHA') }}
      threads: 8
    databricks:
      type: databricks
      schema: *schema
      host: "{{ env_var('DBT_ENV_SECRET_DATABRICKS_HOST') }}"
      http_path: "{{ env_var('DBT_ENV_SECRET_DATABRICKS_HTTP_PATH') }}"
      token: "{{ env_var('DBT_ENV_SECRET_DATABRICKS_TOKEN') }}"
      threads: 8
    spark:
      type: spark
      method: odbc
      schema: *schema
      host: "{{ env_var('DBT_ENV_SECRET_DATABRICKS_HOST') }}"
      driver: "{{ env_var('DBT_ENV_SPARK_DRIVER_PATH') }}"
      endpoint: "{{ env_var('DBT_ENV_SPARK_ENDPOINT') }}"
      token: "{{ env_var('DBT_ENV_SECRET_DATABRICKS_TOKEN') }}"
      threads: 8
    bigquery:
      type: bigquery
      method: oauth
      project: "{{ env_var('DBT_ENV_SECRET_GCP_PROJECT') }}"
      dataset: *schema
      threads: 8
      timeout_seconds: 300
      priority: interactive
      retries: 1
    postgres:
      type: postgres
      host: localhost
      user: postgres
      password: postgres
      port: 5432
      dbname: postgres
      schema: public
      threads: 8
    dremio:
      type: dremio
      user: "{{ env_var('DBT_ENV_DREMIO_USER') }}"
      password: "{{ env_var('DBT_ENV_DREMIO_PASSWORD') }}"
      software_host: "{{ env_var('DBT_ENV_DREMIO_SOFTWARE_HOST') }}"
      port: 443
      threads: 8
      use_ssl: true
      dremio_space: *schema
      object_storage_path: *schema
      object_storage_source: "{{ env_var('DBT_ENV_OBJECT_STORAGE_SOURCE') }}"
